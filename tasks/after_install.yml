---
- name: Ensure export directories exist
  file:
    path: "/exports/pv{{ item }}"
    state: directory
    mode: 0777
    owner: nfsnobody
    group: nfsnobody
  loop: "{{ range(0, PV_COUNT)|list }}"
  
- name: set exports
  template: src='./templates/nfs_exports.j2' dest='/etc/exports.d/openshift-pvs.exports'
  notify:
    - restart nfs-server

- name: Ensure pvs directories exist
  file:
    path: "./pvs"
    state: directory
    mode: 0777

- name: create pv file
  template: src='./templates/nfs_pv.yaml.j2' dest="./pvs/nfs_pv_{{ item }}.yml"
  loop: "{{ range(0, PV_COUNT)|list }}"

- name: create pv
  shell: oc get pv pv{{ item }}; if [ $? -gt 0 ]; then oc create -f ./pvs/nfs_pv_{{ item }}.yml; fi
  loop: "{{ range(0, PV_COUNT) | list }}"

- name: Delete pvs
  file:
    path: "./pvs"
    state: absent

- name: init openshift cicd
  script: ./files/init_openshift.sh

- name: cicd install
  script: ./files/init_cicd.sh
  when: true == {{CICD_INSTALL}}
  ignore_errors: true

- name: check gogs hostname line
  lineinfile: 
    dest: /etc/hosts
    line: "{{ansible_default_ipv4.address}}  {{ item }}.apps.{{ HOSTNAME }}"
  with_items:
    - gogs-cicd
    - jenkins-cicd
    - sonarqube-cicd
    - nexus-cicd
    - jenkins-jeesite
    - jeesite-jeesite
  notify:
    - restart dnsmasq
  when: true == {{CICD_INSTALL}}

- name: waiting for mysql up
  command: oc get dc mysql -n jeesite| grep -v NAME| awk '{print $4}'
  register: mysql_result
  until: "mysql_result.stdout == '1'"
  retries: 60
  delay: 10
  when: true == {{CICD_INSTALL}}

- name: init jeesite data
  shell: table_count=$(mysql -hmysql.jeesite.svc -ujeesite -pjeesite jeesite -e "show tables;" | wc -l); if "$table_count" == "0"; mysql -hmysql.jeesite.svc -ujeesite -pjeesite jeesite < jeesite/db/jeesite_mysql.sql; fi
  when: true == {{CICD_INSTALL}}
